
import * as React from "react"
import { fireEvent, render, screen } from "@testing-library/react-native"
import { <%= props.pascalCaseName %> } from "./<%= props.pascalCaseName %>"

jest.mock("react-native/Libraries/Animated/NativeAnimatedHelper")

describe("<%= props.pascalCaseName %> component", () => {
  // const allQuestions = ['q1', 'q2'];
  // const mockFn = jest.fn();

  test("should be able to be created", () => {
    // example of how to set up props for more complicated component.
    // const component = <<%= props.pascalCaseName %> questions={allQuestions} onSubmit={mockFn} />
    const component = <<%= props.pascalCaseName %>/>
    render(component);
    const getComponentResult = screen.getByTestId("<%= props.kebabCaseName %>-component-id")

    // example of how to text more complex event stuff
    // const answerInputs = screen.getAllByLabelText('answer input');
    // fireEvent.changeText(answerInputs[0], 'a1');
    // fireEvent.changeText(answerInputs[1], 'a2');
    // fireEvent.press(screen.getByText('Submit'));

    // expect(mockFn).toBeCalledWith({
    //  1: { q: 'q1', a: 'a1' },
    //  2: { q: 'q2', a: 'a2' },
    // });

    expect(getComponentResult).toBeTruthy()
  })
})
